+************************+
* sas - Simple ASsembler *
+************************+

                              *Design*

1. Command line arguments
--------------------------

[filename]

	The file read to generate the binary, it is written in dcpu-16 
	assembler.

--help, -h

	Displays usage information and exits.

--little-endian

	Generate a binary with the least significant byte first in all words.

-I <path>

	Add <path> to the list of paths the assembler looks for when including
	files with the preprocessor like so `.include <file.asm>', files
	included like so `.include "file.asm"' will be searched in local
	directory and won't be searched in paths specified with the `-I' 
	option.

-o <output>

	sas will generate a binary with name <output>, default is "out.bin".

--version

	Displays the version number and exits.


2. Syntax support 
------------------

sas assembler supports all from the dcpu-16 specification 1.7. However,
an extra instruction has been added, which is `DAT', it lets you input
data directly, relative to its position.

Notch label syntax is supported `:label' as well as normal label support
`label:'.

sas also adds a preprocessor to its assembler, see `3. Preprocessor'.

3. Preprocessor
----------------

[.include "file.asm"] or [.include <file.asm>]

	  These include files, the one that uses '<' and '>' is affected by 
	  the `-I' command line option.

[.equ <identifier>, <value>] 

	 Defines a constant with identifier <identifier> and assigns it the 
	 value <value>.

[.align <address>]

	Pads the binary file with zeros continuosly until it reaches address 
	[address]. (it pads [address] too)

[.fill <length> <value>]

       Fills the binary file with <value> for <length> addresses.

[.org <origin>]

      Origin of the generated binary onward, is <origin>.

4. Relocation tables
---------------------

(TODO: relocation tables are job of the linker!)

Refer to [https://github.com/DCPUTeam/0x10c-Standards/blob/master/ASM/Draft_Assembly_Relocation_Table.txt]
for more information.
